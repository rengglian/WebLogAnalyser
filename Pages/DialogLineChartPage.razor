@page "/dialogLinechartpage/1"

@using WebLogAnalyser.Models
@inject Radzen.DialogService dialogService

<h1>@Title</h1>
<div class="container">
    <div class="row">
        <div class="col">
            <label>Show Legend<RadzenCheckBox @bind-Value="@(showLegend)" Name="showLegend"></RadzenCheckBox></label>
            <RadzenChart>
                @foreach(var lineChart in lineCharts)
                {
                <RadzenLineSeries Data="@lineChart.Values" CategoryProperty="X" Title="@lineChart.Title" ValueProperty="Y" LineType="LineType.Solid" StrokeWidth="1">
                    <RadzenMarkers MarkerType="MarkerType.None" />
                    <RadzenValueAxis Step="100">
                        <RadzenGridLines Visible="true" />
                    </RadzenValueAxis>
                    <RadzenCategoryAxis Min="0" Max="@MaxX" Step="20">
                        <RadzenGridLines Visible="true" />
                    </RadzenCategoryAxis>
                </RadzenLineSeries>
                }
                <RadzenLegend Position="LegendPosition.Right" Visible="@showLegend" />
            </RadzenChart>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <RadzenButton Click="@((args) => dialogService.Close(true))" Text="OK" Style="margin-bottom: 10px; width: 150px" />
        <RadzenButton Click="@((args) => dialogService.Close(false))" ButtonStyle="ButtonStyle.Secondary" Text="Cancel" Style="margin-bottom: 10px; width: 150px" />
    </div>
</div>

@code {
    [Parameter] public IEnumerable<LogEntry> SelectedEntries { get; set; }

    string Title = "Line Chart";

    class PointItem
    {
        public int Y { get; set; } = 0;
        public int X { get; set; } = 0;
    }

    class LineChartItem
    {
        public string Title { get; set; }
        public List<PointItem> Values { get; set; }
    }

    int MaxX = 0;

    List<LineChartItem> lineCharts = new List<LineChartItem>();
    bool showLegend = false;

    protected override void OnInitialized()
    {
        foreach(var entry in SelectedEntries)
        {
            var values = new List<PointItem>();
            string[] splits = entry.Payload.Split("\t");
            int i = 0;
            if (splits.Length > 1)
            {
                foreach (var strValue in splits)
                {
                    if (Int32.TryParse(strValue, out int val))
                    {
                        values.Add(new PointItem { Y = val, X = i });
                        i++;
                        if (i > MaxX) MaxX = i;
                    }
                }
            }
            else
            {
                values.Add(new PointItem { Y = 0, X = i });
            }
            lineCharts.Add(new LineChartItem { Title = splits[0], Values = values });
        }
    }
}